{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tomasboda/Documents/Workspace/React/edulabs/src/app/screens/admin/AdminClassroom.js\";\nimport React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { setStorageItem, getStorageItem, removeStorageItem, isLogged } from \"../../config/Config\";\nimport Api from \"../../config/Api\";\nimport Loading from \"../../components/Loading\";\nimport Panel from \"../../components/Panel\";\nimport Heading from \"../../components/Heading\";\nimport Box from \"../../components/Box\";\nimport Edit from \"../../components/Edit\";\nimport Option from \"../../components/Option\";\nimport \"../../styles/admin.css\";\nimport Icon from \"../../assets/login-icon.svg\";\nimport ProfileIcon from \"../../assets/profile-icon.svg\";\nimport AddIcon from \"../../assets/add-icon.svg\";\n\nclass AdminClassroom extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      edit: false,\n      type: \"add-user\",\n      classroom: {},\n      students: [],\n      deletedUser: \"\",\n      option: false,\n      optionLoading: false,\n      loading: true\n    };\n    this.loadData = this.loadData.bind(this);\n    this.showOption = this.showOption.bind(this);\n    this.deleteUser = this.deleteUser.bind(this);\n  }\n\n  async loadData() {\n    this.setState({\n      loading: true\n    });\n    const token = getStorageItem(\"token\");\n    const id = this.props.match.params.id;\n    const getClassroom = await Api.getClassroom(id, token);\n    const getStudents = await Api.getAdminClassroomStudents(id, token);\n    console.log(getStudents);\n    console.log(getClassroom);\n    console.log(getStudents);\n\n    if (getClassroom.classroom && getStudents.students) {\n      const students = getStudents.students;\n      const classroom = getClassroom.classroom;\n      students.sort((a, b) => {\n        return a.lastname.localeCompare(b.lastname);\n      });\n      this.setState({\n        classroom: classroom,\n        students: students,\n        loading: false\n      });\n    }\n  }\n\n  showOption(event, id) {\n    event.stopPropagation();\n    this.setState({\n      deletedUser: id,\n      option: true\n    });\n  }\n\n  async deleteUser(id) {\n    this.setState({\n      optionLoading: true\n    });\n    const token = getStorageItem(\"token\");\n    const call = await Api.deleteUser(id, token);\n\n    if (call.message === \"User deleted successfully\") {\n      this.setState({\n        option: false\n      }, () => this.loadData());\n    }\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen\",\n      id: \"admin-classroom\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        title: this.state.classroom.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Panel, {\n        title: \"Administrate your classrooms\",\n        text: \"Your classroom structure in one place. Assign students to this classroom, change the structure of it and update it as your school grows.\",\n        image: Icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), this.state.edit ? /*#__PURE__*/_jsxDEV(Edit, {\n        type: this.state.type,\n        classroom: this.state.classroom.id,\n        role: \"student\",\n        close: () => this.setState({\n          edit: false\n        }, () => this.loadData())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this) : null, this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fill-space\",\n        children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 67\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-panel\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          item: {\n            name: \"Add student\"\n          },\n          icon: AddIcon,\n          onClick: () => this.setState({\n            edit: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), this.state.students.map(student => /*#__PURE__*/_jsxDEV(Box, {\n          item: {\n            name: student.firstname + \" \" + student.lastname\n          },\n          onClick: () => this.props.history.push(\"/admin/users/\" + student.id),\n          icon: ProfileIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this), this.state.option ? /*#__PURE__*/_jsxDEV(Option, {\n        title: \"Delete student?\",\n        loading: this.state.optionLoading,\n        onClick: () => this.deleteUser(this.state.deletedUser),\n        close: () => this.setState({\n          option: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(AdminClassroom);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/tomasboda/Documents/Workspace/React/edulabs/src/app/screens/admin/AdminClassroom.js"],"names":["React","Link","withRouter","setStorageItem","getStorageItem","removeStorageItem","isLogged","Api","Loading","Panel","Heading","Box","Edit","Option","AdminClassroom","Component","constructor","state","edit","type","classroom","students","deletedUser","option","optionLoading","loading","loadData","bind","showOption","deleteUser","setState","token","id","props","match","params","getClassroom","getStudents","getAdminClassroomStudents","console","log","sort","a","b","lastname","localeCompare","event","stopPropagation","call","message","componentDidMount","render","name","Icon","AddIcon","map","student","firstname","history","push","ProfileIcon"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport { setStorageItem, getStorageItem, removeStorageItem, isLogged } from \"../../config/Config\";\n\nimport Api from \"../../config/Api\";\nimport Loading from \"../../components/Loading\";\nimport Panel from \"../../components/Panel\";\nimport Heading from \"../../components/Heading\";\nimport Box from \"../../components/Box\";\nimport Edit from \"../../components/Edit\";\nimport Option from \"../../components/Option\";\n\nimport \"../../styles/admin.css\";\n\nimport Icon from \"../../assets/login-icon.svg\";\nimport ProfileIcon from \"../../assets/profile-icon.svg\";\nimport AddIcon from \"../../assets/add-icon.svg\";\n\nclass AdminClassroom extends React.Component {\n\n    state = {\n        edit: false,\n        type: \"add-user\",\n\n        classroom: {},\n        students: [],\n\n        deletedUser: \"\",\n        option: false,\n        optionLoading: false,\n\n        loading: true\n    }\n\n    constructor() {\n        super();\n\n        this.loadData = this.loadData.bind(this);\n        this.showOption = this.showOption.bind(this);\n        this.deleteUser = this.deleteUser.bind(this);\n    }\n\n    async loadData() {\n        this.setState({ loading: true });\n\n        const token = getStorageItem(\"token\");\n        const id = this.props.match.params.id;\n\n        const getClassroom = await Api.getClassroom(id, token);\n        const getStudents = await Api.getAdminClassroomStudents(id, token);\n        console.log(getStudents);\n\n        console.log(getClassroom);\n        console.log(getStudents);\n\n        if (getClassroom.classroom && getStudents.students) {\n            const students = getStudents.students;\n            const classroom = getClassroom.classroom;\n\n            students.sort((a, b) => {\n                return a.lastname.localeCompare(b.lastname);\n            });\n\n            this.setState({\n                classroom: classroom,\n                students: students,\n                loading: false\n            });\n        }\n    }\n\n    showOption(event, id) {\n        event.stopPropagation();\n\n        this.setState({\n            deletedUser: id,\n            option: true\n        });\n    }\n\n    async deleteUser(id) {\n        this.setState({ optionLoading: true });\n\n        const token = getStorageItem(\"token\");\n        const call = await Api.deleteUser(id, token);\n\n        if (call.message === \"User deleted successfully\") {\n            this.setState({ option: false }, () => this.loadData());\n        }\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    render() {\n        return(\n            <div className=\"screen\" id=\"admin-classroom\">\n                <Heading title={this.state.classroom.name} />\n\n                <Panel\n                    title=\"Administrate your classrooms\"\n                    text=\"Your classroom structure in one place. Assign students to this classroom, change the structure of it and update it as your school grows.\"\n                    image={Icon}\n                />\n\n                {this.state.edit ? (\n                    <Edit\n                        type={this.state.type}\n                        classroom={this.state.classroom.id}\n                        role=\"student\"\n                        close={() => this.setState({ edit: false }, () => this.loadData())}\n                    />\n                ) : null}\n\n                {this.state.loading ? <div className=\"fill-space\"><Loading /></div> : (\n                    <div className=\"body-panel\">\n                        <Box\n                            item={{ name: \"Add student\" }}\n                            icon={AddIcon}\n                            onClick={() => this.setState({ edit: true })}\n                        />\n\n                        {this.state.students.map((student) => (\n                            <Box\n                                item={{ name: student.firstname + \" \" + student.lastname }}\n                                onClick={() => this.props.history.push(\"/admin/users/\" + student.id)}\n                                icon={ProfileIcon}\n                            />\n                        ))}\n                    </div>\n                )}\n\n                {this.state.option ? (\n                    <Option\n                        title=\"Delete student?\"\n                        loading={this.state.optionLoading}\n                        onClick={() => this.deleteUser(this.state.deletedUser)}\n                        close={() => this.setState({ option: false })}\n                    />\n                ) : null}\n            </div>\n        )\n    }\n}\n\nexport default withRouter(AdminClassroom);"]},"metadata":{},"sourceType":"module"}