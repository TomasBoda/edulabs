{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tomasboda/Documents/Workspace/React/edulabs/src/app/screens/Classrooms.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { setStorageItem, getStorageItem, removeStorageItem, isLogged } from \"../config/Config\";\nimport Api from \"../config/Api\";\nimport Loading from \"../components/Loading\";\nimport Panel from \"../components/Panel\";\nimport Heading from \"../components/Heading\";\nimport Box from \"../components/Box\";\nimport \"../styles/classrooms.css\";\nimport Icon from \"../assets/login-icon.svg\";\n\nclass Classrooms extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      subject: {},\n      classrooms: [],\n      loading: true\n    };\n    this.loadData = this.loadData.bind(this);\n    this.loadSubject = this.loadSubject.bind(this);\n  }\n\n  async loadData() {\n    const token = getStorageItem(\"token\");\n    const subjectId = this.props.match.params.id;\n    const call = await Api.getTeacherClassroomsBySubject(subjectId, token);\n\n    if (call.classrooms) {\n      var fetchedClassrooms = [];\n\n      for (let i = 0; i < call.classrooms.length; i++) {\n        const classroomId = call.classrooms[i];\n        const classroom = await Api.getClassroom(classroomId, token);\n        fetchedClassrooms.push(classroom.classroom);\n      }\n\n      console.log(fetchedClassrooms);\n      this.setState({\n        classrooms: fetchedClassrooms\n      });\n    }\n  }\n\n  async loadSubject() {\n    const token = getStorageItem(\"token\");\n    const subjectId = this.props.match.params.id;\n    const call = await Api.getSubject(subjectId, token);\n\n    if (call.subject) {\n      this.setState({\n        subject: call.subject\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.loadSubject();\n    this.loadData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen\",\n      id: \"classrooms\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        title: this.state.subject.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Panel, {\n        title: \"Manage your classrooms\",\n        text: \"All the classrooms you teach in one place. Manage your classrooms, browse through the results of your students and help them grow.\",\n        image: Icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-panel\",\n        children: this.state.classrooms.map(classroom => /*#__PURE__*/_jsxDEV(Box, {\n          item: classroom,\n          onClick: () => this.props.history.push(\"/subjects/\" + this.state.subject.id + \"/classrooms/\" + classroom.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Classrooms);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/tomasboda/Documents/Workspace/React/edulabs/src/app/screens/Classrooms.js"],"names":["React","withRouter","setStorageItem","getStorageItem","removeStorageItem","isLogged","Api","Loading","Panel","Heading","Box","Classrooms","Component","constructor","state","subject","classrooms","loading","loadData","bind","loadSubject","token","subjectId","props","match","params","id","call","getTeacherClassroomsBySubject","fetchedClassrooms","i","length","classroomId","classroom","getClassroom","push","console","log","setState","getSubject","componentDidMount","render","name","Icon","map","history"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { setStorageItem, getStorageItem, removeStorageItem, isLogged } from \"../config/Config\";\n\nimport Api from \"../config/Api\";\nimport Loading from \"../components/Loading\";\nimport Panel from \"../components/Panel\";\nimport Heading from \"../components/Heading\";\nimport Box from \"../components/Box\";\n\nimport \"../styles/classrooms.css\";\n\nimport Icon from \"../assets/login-icon.svg\";\n\nclass Classrooms extends React.Component {\n\n    state = {\n        subject: {},\n        classrooms: [],\n\n        loading: true\n    }\n\n    constructor() {\n        super();\n\n        this.loadData = this.loadData.bind(this);\n        this.loadSubject = this.loadSubject.bind(this);\n    }\n\n    async loadData() {\n        const token = getStorageItem(\"token\");\n        const subjectId = this.props.match.params.id;\n\n        const call = await Api.getTeacherClassroomsBySubject(subjectId, token);\n\n        if (call.classrooms) {\n            var fetchedClassrooms = [];\n\n            for (let i = 0; i < call.classrooms.length; i++) {\n                const classroomId = call.classrooms[i];\n                const classroom = await Api.getClassroom(classroomId, token);\n                fetchedClassrooms.push(classroom.classroom);\n            }\n\n            console.log(fetchedClassrooms);\n\n            this.setState({ classrooms: fetchedClassrooms });\n        }\n    }\n\n    async loadSubject() {\n        const token = getStorageItem(\"token\");\n        const subjectId = this.props.match.params.id;\n\n        const call = await Api.getSubject(subjectId, token);\n\n        if (call.subject) {\n            this.setState({ subject: call.subject });\n        }\n    }\n\n    componentDidMount() {\n        this.loadSubject();\n        this.loadData();\n    }\n\n    render() {\n        return(\n            <div className=\"screen\" id=\"classrooms\">\n                <Heading title={this.state.subject.name} />\n\n                <Panel\n                    title={\"Manage your classrooms\"}\n                    text=\"All the classrooms you teach in one place. Manage your classrooms, browse through the results of your students and help them grow.\"\n                    image={Icon}\n                />\n\n                <div className=\"body-panel\">\n                    {this.state.classrooms.map((classroom) => (\n                        <Box\n                            item={classroom}\n                            onClick={() => this.props.history.push(\"/subjects/\" + this.state.subject.id + \"/classrooms/\" + classroom.id)}\n                        />\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Classrooms);"]},"metadata":{},"sourceType":"module"}