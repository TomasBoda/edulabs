{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tomasboda/Documents/Workspace/React/edulabs/src/app/screens/admin/AdminUser.js\";\nimport React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { setStorageItem, getStorageItem, removeStorageItem, isLogged } from \"../../config/Config\";\nimport Api from \"../../config/Api\";\nimport Loading from \"../../components/Loading\";\nimport Panel from \"../../components/Panel\";\nimport Heading from \"../../components/Heading\";\nimport Box from \"../../components/Box\";\nimport Edit from \"../../components/Edit\";\nimport Popup from \"../../components/Popup\";\nimport \"../../styles/admin.css\";\nimport Icon from \"../../assets/login-icon.svg\";\nimport ProfileIcon from \"../../assets/profile-icon.svg\";\n\nclass AdminUser extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      user: {},\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      role: \"\",\n      admin: 0,\n      selectedStudentClassroom: \"\",\n      selectedStudentSubjects: [],\n      selectedTeacherSubjects: [],\n      classrooms: [],\n      subjects: [],\n      teacherData: [],\n      popup: false,\n      message: \"Please fill in all blank spaces\",\n      popupLoading: false,\n      loading: true\n    };\n    this.loadUserData = this.loadUserData.bind(this);\n    this.loadStudentSubjects = this.loadStudentSubjects.bind(this);\n    this.loadStudentClassrooms = this.loadStudentClassrooms.bind(this);\n    this.addStudentSubject = this.addStudentSubject.bind(this);\n    this.removeStudentSubject = this.removeStudentSubject.bind(this);\n    this.changeStudentClassroom = this.changeStudentClassroom.bind(this);\n    this.addTeacherSubject = this.addTeacherSubject.bind(this);\n    this.removeTeacherSubject = this.removeTeacherSubject.bind(this);\n    this.loadTeacherSubjectsAndClassrooms = this.loadTeacherSubjectsAndClassrooms.bind(this);\n    this.isTeached = this.isTeached.bind(this);\n  } //////////////////////////////////\n\n\n  async addStudentSubject(subjectId) {\n    const token = getStorageItem(\"token\");\n    const userId = this.props.match.params.id;\n    const call = await Api.addAdminStudentSubject({\n      userId: userId,\n      subjectId: subjectId,\n      classroomId: this.state.selectedStudentClassroom\n    }, token);\n\n    if (call.message === \"Subject added successfully\") {\n      this.loadStudentSubjects();\n    }\n  }\n\n  async removeStudentSubject(subjectId) {\n    const token = getStorageItem(\"token\");\n    const userId = this.props.match.params.id;\n    const call = await Api.removeAdminStudentSubject({\n      userId: userId,\n      subjectId: subjectId,\n      classroomId: this.state.selectedStudentClassroom\n    }, token);\n\n    if (call.message === \"Subject removed successfully\") {\n      this.loadStudentSubjects();\n    }\n  }\n\n  async changeStudentClassroom(classroomId) {\n    const token = getStorageItem(\"token\");\n    const userId = this.props.match.params.id;\n    const call = await Api.changeAdminStudentClassroom({\n      userId: userId,\n      classroomId: classroomId\n    }, token);\n\n    if (call.message === \"Classroom changed successfully\") {\n      this.loadUserData();\n    }\n  }\n\n  async loadUserData() {\n    this.setState({\n      loading: true\n    });\n    const token = getStorageItem(\"token\");\n    const id = this.props.match.params.id;\n    const call = await Api.getAdminUser(id, token);\n\n    if (call.user) {\n      this.setState({\n        firstname: call.user.firstname,\n        lastname: call.user.lastname,\n        email: call.user.email,\n        role: call.user.role,\n        admin: call.user.admin\n      });\n\n      if (call.user.role === \"student\") {\n        this.setState({\n          selectedStudentClassroom: call.user.classroom,\n          loading: false\n        });\n      }\n    }\n  }\n\n  async loadStudentSubjects() {\n    const token = getStorageItem(\"token\");\n    const id = this.props.match.params.id;\n    const allSubjects = await Api.getAdminSubjects(token);\n    const studentSubjects = await Api.getAdminUserSubjects(id, token);\n\n    if (allSubjects.subjects && studentSubjects.subjects) {\n      const subjects = allSubjects.subjects;\n      subjects.sort((a, b) => {\n        return a.name.localeCompare(b.name);\n      });\n      this.setState({\n        subjects: subjects,\n        selectedStudentSubjects: studentSubjects.subjects\n      });\n    }\n  }\n\n  async loadStudentClassrooms() {\n    const token = getStorageItem(\"token\");\n    const allClassrooms = await Api.getAdminClassrooms(token);\n\n    if (allClassrooms.classrooms) {\n      const classrooms = allClassrooms.classrooms;\n      classrooms.sort((a, b) => {\n        return a.name.localeCompare(b.name);\n      });\n      this.setState({\n        classrooms: classrooms\n      });\n    }\n  } ///////////////////////////////////\n\n\n  async addTeacherSubject(subjectId, classroomId) {\n    const token = getStorageItem(\"token\");\n    const userId = this.props.match.params.id;\n    const call = await Api.addAdminTeacherSubject({\n      userId: userId,\n      subjectId: subjectId,\n      classroomId: classroomId\n    }, token);\n\n    if (call.message === \"Subject added successfully\") {\n      this.loadTeacherSubjectsAndClassrooms();\n    }\n  }\n\n  async removeTeacherSubject(subjectId, classroomId) {\n    const token = getStorageItem(\"token\");\n    const userId = this.props.match.params.id;\n    const call = await Api.removeAdminTeacherSubject({\n      userId: userId,\n      subjectId: subjectId,\n      classroomId: classroomId\n    }, token);\n\n    if (call.message === \"Subject removed successfully\") {\n      this.loadTeacherSubjectsAndClassrooms();\n    }\n  }\n\n  isTeached(classroomId, subjectId) {\n    for (let i = 0; i < this.state.teacherData.length; i++) {\n      const item = this.state.teacherData[i];\n\n      if (item.classroom_id === classroomId && item.subject_id === subjectId) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async loadTeacherSubjectsAndClassrooms() {\n    const token = getStorageItem(\"token\");\n    const id = this.props.match.params.id;\n    const subjects = await Api.getAdminSubjects(token);\n    const classrooms = await Api.getAdminClassrooms(token);\n    const call = await Api.getAdminTeacherSubjectsAndClassrooms(id, token);\n    console.log(call.data);\n    console.log(classrooms.classrooms);\n    console.log(subjects.subjects);\n\n    if (call.data && subjects.subjects && classrooms.classrooms) {\n      const fetchedClassrooms = classrooms.classrooms;\n      const fetchedSubjects = subjects.subjects;\n      fetchedClassrooms.sort((a, b) => {\n        return a.name.localeCompare(b.name);\n      });\n      fetchedSubjects.sort((a, b) => {\n        return a.name.localeCompare(b.name);\n      });\n      this.setState({\n        subjects: fetchedSubjects,\n        classrooms: fetchedClassrooms,\n        teacherData: call.data\n      });\n    }\n  } ///////////////////////////////////\n\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    await this.loadUserData();\n    this.setState({\n      loading: true\n    });\n\n    if (this.state.role === \"student\") {\n      await this.loadStudentClassrooms();\n      await this.loadStudentSubjects();\n    } else if (this.state.role === \"teacher\") {\n      await this.loadTeacherSubjectsAndClassrooms();\n    }\n\n    this.setState({\n      loading: false\n    });\n  }\n\n  async updateUser() {\n    this.setState({\n      popup: true,\n      popupLoading: true\n    });\n    const token = getStorageItem(\"token\");\n    const id = this.props.match.params.id;\n    const {\n      firstname,\n      lastname,\n      email,\n      role,\n      admin\n    } = this.state;\n\n    if (firstname.trim() === \"\" || lastname.trim() === \"\" || email.trim() === \"\") {\n      this.setState({\n        popupLoading: false,\n        message: \"Please fill in all blank spaces\"\n      });\n      return;\n    }\n\n    const call = await Api.updateUserData(id, {\n      firstname: firstname,\n      lastname: lastname,\n      email: email,\n      admin: admin\n    }, token);\n\n    if (call.message === \"User data updated successfully\") {\n      this.setState({\n        popupLoading: false,\n        message: \"User updated successfully\"\n      }, () => this.loadUserData());\n    }\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"screen\",\n        id: \"admin-user\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          title: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fill-space\",\n          children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen\",\n      id: \"admin-user\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        title: \"User\",\n        withArrow: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel top-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"profile-image\",\n            src: ProfileIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-panel\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name\",\n              children: this.state.firstname + \" \" + this.state.lastname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"role\",\n              children: this.state.role === \"student\" ? \"Student\" : \"Teacher\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel left-panel animate__animated animate__fadeInUp\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title-small\",\n              children: \"Personal info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: 15\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"text\",\n              placeholder: \"First name\",\n              value: this.state.firstname,\n              onChange: event => this.setState({\n                firstname: event.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"text\",\n              placeholder: \"Last name\",\n              value: this.state.lastname,\n              onChange: event => this.setState({\n                lastname: event.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"text\",\n              placeholder: \"E-mail\",\n              value: this.state.email,\n              onChange: event => this.setState({\n                email: event.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: 20\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title-small\",\n              children: \"Privileges\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: 20\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-panel\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button\" + (this.state.admin === 1 ? \"\" : \"-disabled\"),\n                onClick: () => this.setState({\n                  admin: 1\n                }),\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: 10\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button\" + (this.state.admin === 0 ? \"\" : \"-disabled\"),\n                onClick: () => this.setState({\n                  admin: 0\n                }),\n                children: \"Regular\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button\",\n              onClick: () => this.updateUser(),\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this), this.state.role === \"student\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-panel animate__animated animate__fadeInUp animate__delay-1s\",\n            id: \"student-panel\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"panel classroom-panel\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"title-small\",\n                children: \"Classroom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"list\",\n                children: this.state.classrooms.map(classroom => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"item\",\n                  onClick: () => this.changeStudentClassroom(classroom.id),\n                  style: classroom.id === this.state.selectedStudentClassroom ? {\n                    backgroundColor: \"#5E81F4\",\n                    color: \"white\"\n                  } : null,\n                  children: classroom.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"panel subject-panel\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"title-small\",\n                children: \"Subjects\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"list\",\n                children: this.state.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"item\",\n                  onClick: () => this.state.selectedStudentSubjects.includes(subject.id) ? this.removeStudentSubject(subject.id) : this.addStudentSubject(subject.id),\n                  style: this.state.selectedStudentSubjects.includes(subject.id) ? {\n                    backgroundColor: \"#5E81F4\",\n                    color: \"white\"\n                  } : null,\n                  children: subject.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-panel animate__animated animate__fadeInUp animate__delay-1s\",\n            id: \"teacher-panel\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"panel classroom-panel\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"title-small\",\n                children: \"Classrooms\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"classrooms\",\n                children: this.state.classrooms.map(classroom => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"classroom\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"info\",\n                    children: classroom.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"list\",\n                    children: this.state.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"item\",\n                      onClick: () => this.isTeached(classroom.id, subject.id) ? this.removeTeacherSubject(subject.id, classroom.id) : this.addTeacherSubject(subject.id, classroom.id),\n                      style: this.isTeached(classroom.id, subject.id) ? {\n                        backgroundColor: \"#5E81F4\",\n                        color: \"white\"\n                      } : null,\n                      children: subject.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 392,\n                      columnNumber: 53\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this), this.state.popup ? /*#__PURE__*/_jsxDEV(Popup, {\n        loading: this.state.popupLoading,\n        title: this.state.message,\n        close: () => this.setState({\n          popup: false\n        }, () => this.loadData())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(AdminUser);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/tomasboda/Documents/Workspace/React/edulabs/src/app/screens/admin/AdminUser.js"],"names":["React","Link","withRouter","setStorageItem","getStorageItem","removeStorageItem","isLogged","Api","Loading","Panel","Heading","Box","Edit","Popup","AdminUser","Component","constructor","state","user","firstname","lastname","email","role","admin","selectedStudentClassroom","selectedStudentSubjects","selectedTeacherSubjects","classrooms","subjects","teacherData","popup","message","popupLoading","loading","loadUserData","bind","loadStudentSubjects","loadStudentClassrooms","addStudentSubject","removeStudentSubject","changeStudentClassroom","addTeacherSubject","removeTeacherSubject","loadTeacherSubjectsAndClassrooms","isTeached","subjectId","token","userId","props","match","params","id","call","addAdminStudentSubject","classroomId","removeAdminStudentSubject","changeAdminStudentClassroom","setState","getAdminUser","classroom","allSubjects","getAdminSubjects","studentSubjects","getAdminUserSubjects","sort","a","b","name","localeCompare","allClassrooms","getAdminClassrooms","addAdminTeacherSubject","removeAdminTeacherSubject","i","length","item","classroom_id","subject_id","getAdminTeacherSubjectsAndClassrooms","console","log","data","fetchedClassrooms","fetchedSubjects","componentDidMount","updateUser","trim","updateUserData","render","ProfileIcon","height","event","target","value","width","flex","map","backgroundColor","color","subject","includes","loadData"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport { setStorageItem, getStorageItem, removeStorageItem, isLogged } from \"../../config/Config\";\n\nimport Api from \"../../config/Api\";\nimport Loading from \"../../components/Loading\";\nimport Panel from \"../../components/Panel\";\nimport Heading from \"../../components/Heading\";\nimport Box from \"../../components/Box\";\nimport Edit from \"../../components/Edit\";\nimport Popup from \"../../components/Popup\";\n\nimport \"../../styles/admin.css\";\n\nimport Icon from \"../../assets/login-icon.svg\";\nimport ProfileIcon from \"../../assets/profile-icon.svg\";\n\nclass AdminUser extends React.Component {\n\n    state = {\n        user: {},\n\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        role: \"\",\n        admin: 0,\n\n        selectedStudentClassroom: \"\",\n        selectedStudentSubjects: [],\n\n        selectedTeacherSubjects: [],\n\n        classrooms: [],\n        subjects: [],\n\n        teacherData: [],\n\n        popup: false,\n        message: \"Please fill in all blank spaces\",\n        popupLoading: false,\n\n        loading: true,\n    }\n\n    constructor() {\n        super();\n\n        this.loadUserData = this.loadUserData.bind(this);\n        \n        this.loadStudentSubjects = this.loadStudentSubjects.bind(this);\n        this.loadStudentClassrooms = this.loadStudentClassrooms.bind(this);\n        this.addStudentSubject = this.addStudentSubject.bind(this);\n        this.removeStudentSubject = this.removeStudentSubject.bind(this);\n        this.changeStudentClassroom = this.changeStudentClassroom.bind(this);\n\n        this.addTeacherSubject = this.addTeacherSubject.bind(this);\n        this.removeTeacherSubject = this.removeTeacherSubject.bind(this);\n        this.loadTeacherSubjectsAndClassrooms = this.loadTeacherSubjectsAndClassrooms.bind(this);\n        this.isTeached = this.isTeached.bind(this);\n    }\n\n    //////////////////////////////////\n\n    async addStudentSubject(subjectId) {\n        const token = getStorageItem(\"token\");\n        const userId = this.props.match.params.id;\n\n        const call = await Api.addAdminStudentSubject({\n            userId: userId,\n            subjectId: subjectId,\n            classroomId: this.state.selectedStudentClassroom\n        }, token);\n\n        if (call.message === \"Subject added successfully\") {\n            this.loadStudentSubjects();\n        }\n    }\n\n    async removeStudentSubject(subjectId) {\n        const token = getStorageItem(\"token\");\n        const userId = this.props.match.params.id;\n\n        const call = await Api.removeAdminStudentSubject({\n            userId: userId,\n            subjectId: subjectId,\n            classroomId: this.state.selectedStudentClassroom\n        }, token);\n\n        if (call.message === \"Subject removed successfully\") {\n            this.loadStudentSubjects();\n        }\n    }\n\n    async changeStudentClassroom(classroomId) {\n        const token = getStorageItem(\"token\");\n        const userId = this.props.match.params.id;\n\n        const call = await Api.changeAdminStudentClassroom({\n            userId: userId,\n            classroomId: classroomId\n        }, token);\n\n        if (call.message === \"Classroom changed successfully\") {\n            this.loadUserData();\n        }\n    }\n\n    async loadUserData() {\n        this.setState({ loading: true });\n\n        const token = getStorageItem(\"token\");\n        const id = this.props.match.params.id;\n\n        const call = await Api.getAdminUser(id, token);\n\n        if (call.user) {\n            this.setState({\n                firstname: call.user.firstname,\n                lastname: call.user.lastname,\n                email: call.user.email,\n                role: call.user.role,\n                admin: call.user.admin,\n            });\n\n            if (call.user.role === \"student\") {\n                this.setState({\n                    selectedStudentClassroom: call.user.classroom,\n                    loading: false\n                });\n            }\n        }\n    }\n\n    async loadStudentSubjects() {\n        const token = getStorageItem(\"token\");\n        const id = this.props.match.params.id;\n\n        const allSubjects = await Api.getAdminSubjects(token);\n        const studentSubjects = await Api.getAdminUserSubjects(id, token);\n\n        if (allSubjects.subjects && studentSubjects.subjects) {\n            const subjects = allSubjects.subjects;\n            subjects.sort((a, b) => {\n                return a.name.localeCompare(b.name);\n            });\n\n            this.setState({\n                subjects: subjects,\n                selectedStudentSubjects: studentSubjects.subjects\n            });\n        }\n    }\n\n    async loadStudentClassrooms() {\n        const token = getStorageItem(\"token\");\n\n        const allClassrooms = await Api.getAdminClassrooms(token);\n\n        if (allClassrooms.classrooms) {\n            const classrooms = allClassrooms.classrooms;\n            classrooms.sort((a, b) => {\n                return a.name.localeCompare(b.name);\n            });\n\n            this.setState({\n                classrooms: classrooms\n            });\n        }\n    }\n\n    ///////////////////////////////////\n\n    async addTeacherSubject(subjectId, classroomId) {\n        const token = getStorageItem(\"token\");\n        const userId = this.props.match.params.id;\n\n        const call = await Api.addAdminTeacherSubject({\n            userId: userId,\n            subjectId: subjectId,\n            classroomId: classroomId\n        }, token);\n\n        if (call.message === \"Subject added successfully\") {\n            this.loadTeacherSubjectsAndClassrooms();\n        }\n    }\n\n    async removeTeacherSubject(subjectId, classroomId) {\n        const token = getStorageItem(\"token\");\n        const userId = this.props.match.params.id;\n\n        const call = await Api.removeAdminTeacherSubject({\n            userId: userId,\n            subjectId: subjectId,\n            classroomId: classroomId\n        }, token);\n\n        if (call.message === \"Subject removed successfully\") {\n            this.loadTeacherSubjectsAndClassrooms();\n        }\n    }\n\n    isTeached(classroomId, subjectId) {\n        for (let i = 0; i < this.state.teacherData.length; i++) {\n            const item = this.state.teacherData[i];\n\n            if (item.classroom_id === classroomId && item.subject_id === subjectId) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    async loadTeacherSubjectsAndClassrooms() {\n        const token = getStorageItem(\"token\");\n        const id = this.props.match.params.id;\n\n        const subjects = await Api.getAdminSubjects(token);\n        const classrooms = await Api.getAdminClassrooms(token);\n        const call = await Api.getAdminTeacherSubjectsAndClassrooms(id, token);\n\n        console.log(call.data);\n        console.log(classrooms.classrooms);\n        console.log(subjects.subjects);\n\n        if (call.data && subjects.subjects && classrooms.classrooms) {\n            const fetchedClassrooms = classrooms.classrooms;\n            const fetchedSubjects = subjects.subjects;\n\n            fetchedClassrooms.sort((a, b) => {\n                return a.name.localeCompare(b.name);\n            });\n\n            fetchedSubjects.sort((a, b) => {\n                return a.name.localeCompare(b.name);\n            });\n\n            this.setState({\n                subjects: fetchedSubjects,\n                classrooms: fetchedClassrooms,\n                teacherData: call.data\n            })\n        }\n    }\n\n    ///////////////////////////////////\n\n    async componentDidMount() {\n        this.setState({ loading: true });\n\n        await this.loadUserData();\n\n        this.setState({ loading: true });\n\n        if (this.state.role === \"student\") {\n            await this.loadStudentClassrooms();\n            await this.loadStudentSubjects();\n        } else if (this.state.role === \"teacher\") {\n            await this.loadTeacherSubjectsAndClassrooms();\n        }\n\n        this.setState({ loading: false });\n    }\n\n    async updateUser() {\n        this.setState({ popup: true, popupLoading: true });\n\n        const token = getStorageItem(\"token\");\n\n        const id = this.props.match.params.id;\n        const { firstname, lastname, email, role, admin } = this.state;\n\n        if (firstname.trim() === \"\" || lastname.trim() === \"\" || email.trim() === \"\") {\n            this.setState({\n                popupLoading: false,\n                message: \"Please fill in all blank spaces\"\n            });\n\n            return;\n        }\n\n        const call = await Api.updateUserData(id, {\n            firstname: firstname,\n            lastname: lastname,\n            email: email,\n            admin: admin\n        }, token);\n\n        if (call.message === \"User data updated successfully\") {\n            this.setState({\n                popupLoading: false,\n                message: \"User updated successfully\"\n            }, () => this.loadUserData());\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return(\n                <div className=\"screen\" id=\"admin-user\">\n                    <Heading title=\"User\" />\n\n                    <div className=\"fill-space\"><Loading /></div>\n                </div>\n            )\n        }\n\n        return(\n            <div className=\"screen\" id=\"admin-user\">\n                <Heading title=\"User\" withArrow />\n\n                <div className=\"body-panel\">\n                    <div className=\"panel top-panel\">\n                        <img className=\"profile-image\" src={ProfileIcon} />\n\n                        <div className=\"info-panel\">\n                            <div className=\"name\">{this.state.firstname + \" \" + this.state.lastname}</div>\n                            <div className=\"role\">{this.state.role === \"student\" ? \"Student\" : \"Teacher\"}</div>\n                        </div>\n                    </div>\n\n                    <div className=\"bottom-panel\">\n                        <div className=\"panel left-panel animate__animated animate__fadeInUp\">\n                            <div className=\"title-small\">Personal info</div>\n\n                            <div style={{ height: 15 }} />\n\n                            <input className=\"input\" type=\"text\" placeholder=\"First name\" value={this.state.firstname} onChange={(event) => this.setState({ firstname: event.target.value })} />\n                            <input className=\"input\" type=\"text\" placeholder=\"Last name\" value={this.state.lastname} onChange={(event) => this.setState({ lastname: event.target.value })} />\n                            <input className=\"input\" type=\"text\" placeholder=\"E-mail\" value={this.state.email} onChange={(event) => this.setState({ email: event.target.value })} />\n\n                            <div style={{ height: 20 }} />\n\n                            <div className=\"title-small\">Privileges</div>\n\n                            <div style={{ height: 20 }} />\n\n                            <div className=\"button-panel\">\n                                <div className={\"button\" + (this.state.admin === 1 ? \"\" : \"-disabled\")} onClick={() => this.setState({ admin: 1 })}>Admin</div>\n                                <div style={{ width: 10 }} />\n                                <div className={\"button\" + (this.state.admin === 0 ? \"\" : \"-disabled\")} onClick={() => this.setState({ admin: 0 })}>Regular</div>\n                            </div>\n\n                            <div style={{ flex: 1 }} />\n\n                            <div className=\"button\" onClick={() => this.updateUser()}>Save changes</div>\n                        </div>\n\n                        {this.state.role === \"student\" ? (\n                        <div className=\"right-panel animate__animated animate__fadeInUp animate__delay-1s\" id=\"student-panel\">\n                            <div className=\"panel classroom-panel\">\n                                <div className=\"title-small\">Classroom</div>\n\n                                <div className=\"list\">\n                                    {this.state.classrooms.map((classroom) => (\n                                        <div className=\"item\" onClick={() => this.changeStudentClassroom(classroom.id)} style={classroom.id === this.state.selectedStudentClassroom ? { backgroundColor: \"#5E81F4\", color: \"white\" } : null}>\n                                            {classroom.name}\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n\n                            <div className=\"panel subject-panel\">\n                                <div className=\"title-small\">Subjects</div>\n\n                                <div className=\"list\">\n                                    {this.state.subjects.map((subject) => (\n                                        <div className=\"item\" onClick={() => this.state.selectedStudentSubjects.includes(subject.id) ? this.removeStudentSubject(subject.id) : this.addStudentSubject(subject.id)} style={this.state.selectedStudentSubjects.includes(subject.id) ? { backgroundColor: \"#5E81F4\", color: \"white\" } : null}>\n                                            {subject.name}\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        </div>\n                        ) : (\n                        <div className=\"right-panel animate__animated animate__fadeInUp animate__delay-1s\" id=\"teacher-panel\">\n                            <div className=\"panel classroom-panel\">\n                                <div className=\"title-small\">Classrooms</div>\n\n                                <div className=\"classrooms\">\n                                    {this.state.classrooms.map((classroom) => (\n                                        <div className=\"classroom\">\n                                            <div className=\"info\">\n                                                {classroom.name}\n                                            </div>\n\n                                            <div className=\"list\">\n                                                {this.state.subjects.map((subject) => (\n                                                    <div className=\"item\"\n                                                        onClick={() => this.isTeached(classroom.id, subject.id) ? this.removeTeacherSubject(subject.id, classroom.id) : this.addTeacherSubject(subject.id, classroom.id)}\n                                                        style={this.isTeached(classroom.id, subject.id) ? { backgroundColor: \"#5E81F4\", color: \"white\" } : null}\n                                                    >\n                                                        {subject.name}\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        </div>\n                        )}\n                    </div>\n                </div>\n\n                {this.state.popup ? (\n                    <Popup\n                        loading={this.state.popupLoading}\n                        title={this.state.message}\n                        close={() => this.setState({ popup: false }, () => this.loadData())}\n                    />\n                ) : null}\n            </div>\n        )\n    }\n}\n\nexport default withRouter(AdminUser);"]},"metadata":{},"sourceType":"module"}