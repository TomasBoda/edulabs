{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tomasboda/Documents/Workspace/React/edulabs/src/app/screens/Grades.js\";\nimport React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { setStorageItem, getStorageItem, removeStorageItem, isLogged } from \"../config/Config\";\nimport { Grade } from \"../screens/Subject\";\nimport Api from \"../config/Api\";\nimport Loading from \"../components/Loading\";\nimport Panel from \"../components/Panel\";\nimport Heading from \"../components/Heading\";\nimport \"../styles/grades.css\";\nimport Icon from \"../assets/login-icon.svg\";\n\nclass Grades extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      subjects: [],\n      loading: true\n    };\n    this.loadSubjects = this.loadSubjects.bind(this);\n  }\n\n  async loadSubjects() {\n    this.setState({\n      loading: true\n    });\n    const token = getStorageItem(\"token\");\n    const call = await Api.getUserSubjects(token);\n\n    if (call.subjects) {\n      var array = [];\n\n      for (let i = 0; i < call.subjects.length; i++) {\n        const getSubject = await Api.getSubject(call.subjects[i], token);\n        const subjectId = getSubject.subject.id;\n        const getGrades = await Api.getGrades(subjectId, token);\n\n        function add(a, b) {\n          return a + b.value;\n        }\n\n        const average = getGrades.grades.reduce(add, 0) / getGrades.grades.length;\n        const subject = { ...getSubject.subject,\n          grades: getGrades.grades,\n          average: average\n        };\n        array.push(subject);\n      }\n\n      this.setState({\n        subjects: array,\n        loading: false\n      });\n    } else {\n      this.setState({\n        loading: false\n      });\n      alert(\"ERROR\");\n    }\n  }\n\n  componentDidMount() {\n    this.loadSubjects();\n  }\n\n  render() {\n    const user = this.state.user;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen\",\n      id: \"grades\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        title: \"Grades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Panel, {\n        title: \"Analyse and improve your results\",\n        text: \"Your average results by subjects, in one place. Analyse your results, consult them with your teachers and improve yourself \",\n        image: Icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fill-space\",\n        children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 67\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-panel\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grades\",\n          children: this.state.subjects.map((subject, index) => /*#__PURE__*/_jsxDEV(Grade, {\n            title: subject.name,\n            value: subject.average,\n            style: index === this.state.subjects.length - 1 ? {\n              border: \"none\"\n            } : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Grades);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/tomasboda/Documents/Workspace/React/edulabs/src/app/screens/Grades.js"],"names":["React","Link","withRouter","setStorageItem","getStorageItem","removeStorageItem","isLogged","Grade","Api","Loading","Panel","Heading","Grades","Component","constructor","state","subjects","loading","loadSubjects","bind","setState","token","call","getUserSubjects","array","i","length","getSubject","subjectId","subject","id","getGrades","add","a","b","value","average","grades","reduce","push","alert","componentDidMount","render","user","Icon","map","index","name","border"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport { setStorageItem, getStorageItem, removeStorageItem, isLogged } from \"../config/Config\";\nimport { Grade } from \"../screens/Subject\";\n\nimport Api from \"../config/Api\";\nimport Loading from \"../components/Loading\";\nimport Panel from \"../components/Panel\";\nimport Heading from \"../components/Heading\";\n\nimport \"../styles/grades.css\";\n\nimport Icon from \"../assets/login-icon.svg\";\n\nclass Grades extends React.Component {\n\n    state = {\n        subjects: [],\n\n        loading: true\n    }\n\n    constructor() {\n        super();\n\n        this.loadSubjects = this.loadSubjects.bind(this);\n    }\n\n    async loadSubjects() {\n        this.setState({ loading: true });\n\n        const token = getStorageItem(\"token\");\n        const call = await Api.getUserSubjects(token);\n\n        if (call.subjects) {\n            var array = [];\n\n            for (let i = 0; i < call.subjects.length; i++) {\n                const getSubject = await Api.getSubject(call.subjects[i], token);\n                \n                const subjectId = getSubject.subject.id;\n                const getGrades = await Api.getGrades(subjectId, token);\n\n                function add(a, b) {\n                    return a + b.value;\n                }\n\n                const average = getGrades.grades.reduce(add, 0) / getGrades.grades.length;\n\n                const subject = {\n                    ...getSubject.subject,\n                    grades: getGrades.grades,\n                    average: average\n                }\n\n                array.push(subject);\n            }\n\n            this.setState({\n                subjects: array,\n                loading: false\n            });\n        } else {\n            this.setState({ loading: false });\n            alert(\"ERROR\");\n        }\n    }\n\n    componentDidMount() {\n        this.loadSubjects();\n    }\n\n    render() {\n        const user = this.state.user;\n\n        return(\n            <div className=\"screen\" id=\"grades\">\n                <Heading title=\"Grades\" />\n\n                <Panel\n                    title=\"Analyse and improve your results\"\n                    text=\"Your average results by subjects, in one place. Analyse your results, consult them with your teachers and improve yourself \"\n                    image={Icon}\n                />\n\n                {this.state.loading ? <div className=\"fill-space\"><Loading /></div> : (\n                    <div className=\"body-panel\">\n                        <div className=\"grades\">\n                            {this.state.subjects.map((subject, index) => (\n                                <Grade\n                                    title={subject.name}\n                                    value={subject.average}\n                                    style={index === this.state.subjects.length - 1 ? { border: \"none\" } : null}\n                                />\n                            ))}\n                        </div>\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Grades);"]},"metadata":{},"sourceType":"module"}