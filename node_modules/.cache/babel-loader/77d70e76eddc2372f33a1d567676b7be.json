{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tomasboda/Documents/Workspace/React/edulabs/src/app/screens/Classroom.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { setStorageItem, getStorageItem, removeStorageItem, isLogged } from \"../config/Config\";\nimport Api from \"../config/Api\";\nimport Loading from \"../components/Loading\";\nimport Panel from \"../components/Panel\";\nimport Heading from \"../components/Heading\";\nimport Box from \"../components/Box\";\nimport Edit from \"../components/Edit\";\nimport \"../styles/classroom.css\";\nimport Icon from \"../assets/login-icon.svg\";\nimport ProfileIcon from \"../assets/profile-icon.svg\";\n\nclass Classroom extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      edit: false,\n      type: \"add-grade\",\n      classroom: {},\n      subject: {},\n      students: [],\n      currentUser: \"\",\n      loading: true\n    };\n    this.loadData = this.loadData.bind(this);\n    this.loadClassroom = this.loadClassroom.bind(this);\n    this.loadSubject = this.loadSubject.bind(this);\n    this.loadStudents = this.loadStudents.bind(this);\n  }\n\n  async loadData() {\n    this.loadClassroom();\n    this.loadSubject();\n    this.loadStudents();\n  }\n\n  async loadStudents() {\n    this.setState({\n      loading: true\n    });\n    const token = getStorageItem(\"token\");\n    const classroomId = this.props.match.params.classroomId;\n    const subjectId = this.props.match.params.id;\n    const call = await Api.getTeacherClassroomStudentsBySubject(classroomId, subjectId, token);\n\n    if (call.students) {\n      var fetchedStudents = [];\n\n      for (let i = 0; i < call.students.length; i++) {\n        const id = call.students[i].user_id;\n        const student = await Api.getTeacherUser(id, token);\n        const grades = await Api.getGradesByUserAndSubject(student.user.id, subjectId, token);\n\n        function add(a, b) {\n          return a + b.value;\n        }\n\n        const average = grades.grades.reduce(add, 0) / grades.grades.length;\n\n        if (student.user.role === \"student\") {\n          fetchedStudents.push({ ...student.user,\n            grades: grades.grades,\n            average: average\n          });\n        }\n\n        var students = fetchedStudents;\n        students.sort((a, b) => {\n          return a.lastname.localeCompare(b.lastname);\n        });\n      }\n\n      this.setState({\n        students: students,\n        loading: false\n      });\n    }\n  }\n\n  async loadClassroom() {\n    const token = getStorageItem(\"token\");\n    const classroomId = this.props.match.params.classroomId;\n    const call = await Api.getClassroom(classroomId, token);\n\n    if (call.classroom) {\n      console.log(call.classroom);\n      this.setState({\n        classroom: call.classroom\n      });\n    }\n  }\n\n  async loadSubject() {\n    const token = getStorageItem(\"token\");\n    const subjectId = this.props.match.params.id;\n    const call = await Api.getSubject(subjectId, token);\n\n    if (call.subject) {\n      console.log(call.subject);\n      this.setState({\n        subject: call.subject\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen\",\n      id: \"classroom\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        title: this.state.subject.name + \" - \" + this.state.classroom.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Panel, {\n        title: \"Manage your classroom\",\n        text: \"Manage your classroom in one place. Evaluate your student's results and help them get the best out of their skills.\",\n        image: Icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), this.state.edit ? /*#__PURE__*/_jsxDEV(Edit, {\n        type: this.state.type,\n        userId: this.state.currentUser,\n        subjectId: this.props.match.params.id,\n        close: () => this.setState({\n          edit: false\n        }),\n        finish: () => this.setState({\n          edit: false\n        }, () => this.loadData())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this) : null, this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fill-space\",\n        children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 67\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-panel\",\n        children: this.state.students.map(student => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"student\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"image\",\n              src: ProfileIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name\",\n              children: student.firstname + \" \" + student.lastname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grade-panel\",\n              children: student.grades.length > 0 ? student.grades.map(grade => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item\",\n                children: grade.value.toFixed(1) + \"%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 45\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message\",\n                style: {\n                  display: \"flex\",\n                  alignItems: \"center\"\n                },\n                children: \"No grades\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"average\",\n              children: student.average ? student.average.toFixed(1) + \"%\" : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button\",\n              onClick: () => this.setState({\n                currentUser: student.id\n              }, () => this.setState({\n                edit: true\n              })),\n              children: \"Add grade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Classroom);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/tomasboda/Documents/Workspace/React/edulabs/src/app/screens/Classroom.js"],"names":["React","withRouter","setStorageItem","getStorageItem","removeStorageItem","isLogged","Api","Loading","Panel","Heading","Box","Edit","Classroom","Component","constructor","state","edit","type","classroom","subject","students","currentUser","loading","loadData","bind","loadClassroom","loadSubject","loadStudents","setState","token","classroomId","props","match","params","subjectId","id","call","getTeacherClassroomStudentsBySubject","fetchedStudents","i","length","user_id","student","getTeacherUser","grades","getGradesByUserAndSubject","user","add","a","b","value","average","reduce","role","push","sort","lastname","localeCompare","getClassroom","console","log","getSubject","componentDidMount","render","name","Icon","map","ProfileIcon","firstname","grade","toFixed","display","alignItems"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,iBAAzC,EAA4DC,QAA5D,QAA4E,kBAA5E;AAEA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,OAAO,yBAAP;;;;AAKA,MAAMC,SAAN,SAAwBZ,KAAK,CAACa,SAA9B,CAAwC;AAepCC,EAAAA,WAAW,GAAG;AACV;AADU,SAbdC,KAac,GAbN;AACJC,MAAAA,IAAI,EAAE,KADF;AAEJC,MAAAA,IAAI,EAAE,WAFF;AAIJC,MAAAA,SAAS,EAAE,EAJP;AAKJC,MAAAA,OAAO,EAAE,EALL;AAMJC,MAAAA,QAAQ,EAAE,EANN;AAQJC,MAAAA,WAAW,EAAE,EART;AAUJC,MAAAA,OAAO,EAAE;AAVL,KAaM;AAGV,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAED,QAAMD,QAAN,GAAiB;AACb,SAAKE,aAAL;AACA,SAAKC,WAAL;AACA,SAAKC,YAAL;AACH;;AAED,QAAMA,YAAN,GAAqB;AACjB,SAAKC,QAAL,CAAc;AAAEN,MAAAA,OAAO,EAAE;AAAX,KAAd;AAEA,UAAMO,KAAK,GAAG1B,cAAc,CAAC,OAAD,CAA5B;AACA,UAAM2B,WAAW,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,WAA5C;AACA,UAAMI,SAAS,GAAG,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBE,EAA1C;AAEA,UAAMC,IAAI,GAAG,MAAM9B,GAAG,CAAC+B,oCAAJ,CAAyCP,WAAzC,EAAsDI,SAAtD,EAAiEL,KAAjE,CAAnB;;AAEA,QAAIO,IAAI,CAAChB,QAAT,EAAmB;AACf,UAAIkB,eAAe,GAAG,EAAtB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAAChB,QAAL,CAAcoB,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,cAAMJ,EAAE,GAAGC,IAAI,CAAChB,QAAL,CAAcmB,CAAd,EAAiBE,OAA5B;AACA,cAAMC,OAAO,GAAG,MAAMpC,GAAG,CAACqC,cAAJ,CAAmBR,EAAnB,EAAuBN,KAAvB,CAAtB;AAEA,cAAMe,MAAM,GAAG,MAAMtC,GAAG,CAACuC,yBAAJ,CAA8BH,OAAO,CAACI,IAAR,CAAaX,EAA3C,EAA+CD,SAA/C,EAA0DL,KAA1D,CAArB;;AAEA,iBAASkB,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;AACf,iBAAOD,CAAC,GAAGC,CAAC,CAACC,KAAb;AACH;;AAED,cAAMC,OAAO,GAAGP,MAAM,CAACA,MAAP,CAAcQ,MAAd,CAAqBL,GAArB,EAA0B,CAA1B,IAA+BH,MAAM,CAACA,MAAP,CAAcJ,MAA7D;;AAEA,YAAIE,OAAO,CAACI,IAAR,CAAaO,IAAb,KAAsB,SAA1B,EAAqC;AACjCf,UAAAA,eAAe,CAACgB,IAAhB,CAAqB,EACjB,GAAGZ,OAAO,CAACI,IADM;AAEjBF,YAAAA,MAAM,EAAEA,MAAM,CAACA,MAFE;AAGjBO,YAAAA,OAAO,EAAEA;AAHQ,WAArB;AAKH;;AAED,YAAI/B,QAAQ,GAAGkB,eAAf;AACAlB,QAAAA,QAAQ,CAACmC,IAAT,CAAc,CAACP,CAAD,EAAIC,CAAJ,KAAU;AACpB,iBAAOD,CAAC,CAACQ,QAAF,CAAWC,aAAX,CAAyBR,CAAC,CAACO,QAA3B,CAAP;AACH,SAFD;AAGH;;AAED,WAAK5B,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAEA,QADA;AAEVE,QAAAA,OAAO,EAAE;AAFC,OAAd;AAIH;AACJ;;AAED,QAAMG,aAAN,GAAsB;AAClB,UAAMI,KAAK,GAAG1B,cAAc,CAAC,OAAD,CAA5B;AACA,UAAM2B,WAAW,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,WAA5C;AAEA,UAAMM,IAAI,GAAG,MAAM9B,GAAG,CAACoD,YAAJ,CAAiB5B,WAAjB,EAA8BD,KAA9B,CAAnB;;AAEA,QAAIO,IAAI,CAAClB,SAAT,EAAoB;AAChByC,MAAAA,OAAO,CAACC,GAAR,CAAYxB,IAAI,CAAClB,SAAjB;AACA,WAAKU,QAAL,CAAc;AAAEV,QAAAA,SAAS,EAAEkB,IAAI,CAAClB;AAAlB,OAAd;AACH;AACJ;;AAED,QAAMQ,WAAN,GAAoB;AAChB,UAAMG,KAAK,GAAG1B,cAAc,CAAC,OAAD,CAA5B;AACA,UAAM+B,SAAS,GAAG,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBE,EAA1C;AAEA,UAAMC,IAAI,GAAG,MAAM9B,GAAG,CAACuD,UAAJ,CAAe3B,SAAf,EAA0BL,KAA1B,CAAnB;;AAEA,QAAIO,IAAI,CAACjB,OAAT,EAAkB;AACdwC,MAAAA,OAAO,CAACC,GAAR,CAAYxB,IAAI,CAACjB,OAAjB;AACA,WAAKS,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAEiB,IAAI,CAACjB;AAAhB,OAAd;AACH;AACJ;;AAED2C,EAAAA,iBAAiB,GAAG;AAChB,SAAKvC,QAAL;AACH;;AAEDwC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,EAAE,EAAC,WAA3B;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,KAAK,EAAE,KAAKhD,KAAL,CAAWI,OAAX,CAAmB6C,IAAnB,GAA0B,KAA1B,GAAkC,KAAKjD,KAAL,CAAWG,SAAX,CAAqB8C;AAAvE;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,KAAD;AACI,QAAA,KAAK,EAAE,uBADX;AAEI,QAAA,IAAI,EAAC,qHAFT;AAGI,QAAA,KAAK,EAAEC;AAHX;AAAA;AAAA;AAAA;AAAA,cAHJ,EASK,KAAKlD,KAAL,CAAWC,IAAX,gBACG,QAAC,IAAD;AACI,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IADrB;AAEI,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWM,WAFvB;AAGI,QAAA,SAAS,EAAE,KAAKU,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBE,EAHvC;AAII,QAAA,KAAK,EAAE,MAAM,KAAKP,QAAL,CAAc;AAAEZ,UAAAA,IAAI,EAAE;AAAR,SAAd,CAJjB;AAKI,QAAA,MAAM,EAAE,MAAM,KAAKY,QAAL,CAAc;AAAEZ,UAAAA,IAAI,EAAE;AAAR,SAAd,EAA+B,MAAM,KAAKO,QAAL,EAArC;AALlB;AAAA;AAAA;AAAA;AAAA,cADH,GAQG,IAjBR,EAmBK,KAAKR,KAAL,CAAWO,OAAX,gBAAqB;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BAA4B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,cAArB,gBACG;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACK,KAAKP,KAAL,CAAWK,QAAX,CAAoB8C,GAApB,CAAyBxB,OAAD,IAAa;AAClC,8BAAO;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,oCACH;AAAK,cAAA,SAAS,EAAC,OAAf;AAAuB,cAAA,GAAG,EAAEyB;AAA5B;AAAA;AAAA;AAAA;AAAA,oBADG,eAEH;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,wBAAuBzB,OAAO,CAAC0B,SAAR,GAAoB,GAApB,GAA0B1B,OAAO,CAACc;AAAzD;AAAA;AAAA;AAAA;AAAA,oBAFG,eAIH;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,wBACKd,OAAO,CAACE,MAAR,CAAeJ,MAAf,GAAwB,CAAxB,GACGE,OAAO,CAACE,MAAR,CAAesB,GAAf,CAAoBG,KAAD,iBACf;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAA,0BAAuBA,KAAK,CAACnB,KAAN,CAAYoB,OAAZ,CAAoB,CAApB,IAAyB;AAAhD;AAAA;AAAA;AAAA;AAAA,sBADJ,CADH,gBAIO;AAAK,gBAAA,SAAS,EAAC,SAAf;AAAyB,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,OAAO,EAAE,MAAX;AAAmBC,kBAAAA,UAAU,EAAE;AAA/B,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA,oBAJG,eAYH;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA,wBAA0B9B,OAAO,CAACS,OAAR,GAAkBT,OAAO,CAACS,OAAR,CAAgBmB,OAAhB,CAAwB,CAAxB,IAA6B,GAA/C,GAAqD;AAA/E;AAAA;AAAA;AAAA;AAAA,oBAZG,eAaH;AAAK,cAAA,SAAS,EAAC,QAAf;AAAwB,cAAA,OAAO,EAAE,MAAM,KAAK1C,QAAL,CAAc;AAAEP,gBAAAA,WAAW,EAAEqB,OAAO,CAACP;AAAvB,eAAd,EAA2C,MAAM,KAAKP,QAAL,CAAc;AAAEZ,gBAAAA,IAAI,EAAE;AAAR,eAAd,CAAjD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbG;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAeH,SAhBA;AADL;AAAA;AAAA;AAAA;AAAA,cApBR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA2CH;;AAnJmC;;AAsJxC,oBAAef,UAAU,CAACW,SAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { setStorageItem, getStorageItem, removeStorageItem, isLogged } from \"../config/Config\";\n\nimport Api from \"../config/Api\";\nimport Loading from \"../components/Loading\";\nimport Panel from \"../components/Panel\";\nimport Heading from \"../components/Heading\";\nimport Box from \"../components/Box\";\nimport Edit from \"../components/Edit\";\n\nimport \"../styles/classroom.css\";\n\nimport Icon from \"../assets/login-icon.svg\";\nimport ProfileIcon from \"../assets/profile-icon.svg\";\n\nclass Classroom extends React.Component {\n\n    state = {\n        edit: false,\n        type: \"add-grade\",\n\n        classroom: {},\n        subject: {},\n        students: [],\n\n        currentUser: \"\",\n\n        loading: true\n    }\n\n    constructor() {\n        super();\n\n        this.loadData = this.loadData.bind(this);\n        this.loadClassroom = this.loadClassroom.bind(this);\n        this.loadSubject = this.loadSubject.bind(this);\n        this.loadStudents = this.loadStudents.bind(this);\n    }\n\n    async loadData() {\n        this.loadClassroom();\n        this.loadSubject();\n        this.loadStudents();\n    }\n\n    async loadStudents() {\n        this.setState({ loading: true });\n\n        const token = getStorageItem(\"token\");\n        const classroomId = this.props.match.params.classroomId;\n        const subjectId = this.props.match.params.id;\n\n        const call = await Api.getTeacherClassroomStudentsBySubject(classroomId, subjectId, token);\n\n        if (call.students) {\n            var fetchedStudents = [];\n\n            for (let i = 0; i < call.students.length; i++) {\n                const id = call.students[i].user_id;\n                const student = await Api.getTeacherUser(id, token);\n\n                const grades = await Api.getGradesByUserAndSubject(student.user.id, subjectId, token);\n\n                function add(a, b) {\n                    return a + b.value;\n                }\n\n                const average = grades.grades.reduce(add, 0) / grades.grades.length;\n\n                if (student.user.role === \"student\") {\n                    fetchedStudents.push({\n                        ...student.user,\n                        grades: grades.grades,\n                        average: average\n                    });\n                }\n\n                var students = fetchedStudents;\n                students.sort((a, b) => {\n                    return a.lastname.localeCompare(b.lastname);\n                });\n            }\n\n            this.setState({\n                students: students,\n                loading: false\n            });\n        }\n    }\n\n    async loadClassroom() {\n        const token = getStorageItem(\"token\");\n        const classroomId = this.props.match.params.classroomId;\n\n        const call = await Api.getClassroom(classroomId, token);\n\n        if (call.classroom) {\n            console.log(call.classroom)\n            this.setState({ classroom: call.classroom });\n        }\n    }\n\n    async loadSubject() {\n        const token = getStorageItem(\"token\");\n        const subjectId = this.props.match.params.id;\n\n        const call = await Api.getSubject(subjectId, token);\n\n        if (call.subject) {\n            console.log(call.subject)\n            this.setState({ subject: call.subject });\n        }\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    render() {\n        return(\n            <div className=\"screen\" id=\"classroom\">\n                <Heading title={this.state.subject.name + \" - \" + this.state.classroom.name} />\n\n                <Panel\n                    title={\"Manage your classroom\"}\n                    text=\"Manage your classroom in one place. Evaluate your student's results and help them get the best out of their skills.\"\n                    image={Icon}\n                />\n\n                {this.state.edit ? (\n                    <Edit\n                        type={this.state.type}\n                        userId={this.state.currentUser}\n                        subjectId={this.props.match.params.id}\n                        close={() => this.setState({ edit: false })}\n                        finish={() => this.setState({ edit: false }, () => this.loadData())}\n                    />\n                ) : null}\n\n                {this.state.loading ? <div className=\"fill-space\"><Loading /></div> : (\n                    <div className=\"body-panel\">\n                        {this.state.students.map((student) => {\n                            return <div className=\"student\">\n                                <img className=\"image\" src={ProfileIcon} />\n                                <div className=\"name\">{student.firstname + \" \" + student.lastname}</div>\n\n                                <div className=\"grade-panel\">\n                                    {student.grades.length > 0 ? (\n                                        student.grades.map((grade) => (\n                                            <div className=\"item\">{grade.value.toFixed(1) + \"%\"}</div>\n                                        ))\n                                        ) : <div className=\"message\" style={{ display: \"flex\", alignItems: \"center\" }}>No grades</div>}\n                                </div>\n\n                                <div className=\"average\">{student.average ? student.average.toFixed(1) + \"%\" : null}</div>\n                                <div className=\"button\" onClick={() => this.setState({ currentUser: student.id }, () => this.setState({ edit: true }))}>Add grade</div>\n                            </div>\n                        })}\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Classroom);"]},"metadata":{},"sourceType":"module"}