{"ast":null,"code":"import React from \"react\";\nimport { API_URL } from \"./Config\";\nexport default class Api extends React.Component {\n  constructor() {\n    super();\n  } // AUTHENTIFICATION API CALLS\n\n\n  static async login(data) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      email: data.email,\n      password: data.password\n    });\n    var requestOptions = {\n      method: \"POST\",\n      headers: headers,\n      body: raw,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/auth/login\", requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async getUser(token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    var requestOptions = {\n      method: \"GET\",\n      headers: headers,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/auth/user\", requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  } // PERSONAL API CALLS\n\n\n  static async getUserSubjects(token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    var requestOptions = {\n      method: \"GET\",\n      headers: headers,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/subjects\", requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async getSubject(id, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    var requestOptions = {\n      method: \"GET\",\n      headers: headers,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/subjects/\" + id, requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async getClassroom(id, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    var requestOptions = {\n      method: \"GET\",\n      headers: headers,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/classrooms/\" + id, requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async getTeacherClassroomsBySubject(subjectId, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    var requestOptions = {\n      method: \"GET\",\n      headers: headers,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/subjects/classrooms/\" + subjectId, requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async getTeacherClassroomStudents(classroomId, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    var requestOptions = {\n      method: \"GET\",\n      headers: headers,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/students/\" + classroomId, requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  } // ADMIN API CALLS\n\n\n  static async getAdminUser(id, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    var requestOptions = {\n      method: \"GET\",\n      headers: headers,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/users/\" + id, requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async getAdminClassroomStudents(id, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    var requestOptions = {\n      method: \"GET\",\n      headers: headers,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/students/\" + id, requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async getAdminUserSubjects(id, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    var requestOptions = {\n      method: \"GET\",\n      headers: headers,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/subjects/\" + id, requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async getAdminUserClassrooms(id, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    var requestOptions = {\n      method: \"GET\",\n      headers: headers,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/classrooms/\" + id, requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async addAdminStudentSubject(data, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    const body = JSON.stringify(data);\n    var requestOptions = {\n      method: \"POST\",\n      headers: headers,\n      body: body,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/students/subjects/add\", requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async removeAdminStudentSubject(data, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    const body = JSON.stringify(data);\n    var requestOptions = {\n      method: \"POST\",\n      headers: headers,\n      body: body,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/students/subjects/remove\", requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async addAdminTeacherSubject(data, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    const body = JSON.stringify(data);\n    var requestOptions = {\n      method: \"POST\",\n      headers: headers,\n      body: body,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/teachers/subjects/add\", requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async removeAdminTeacherSubject(data, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    const body = JSON.stringify(data);\n    var requestOptions = {\n      method: \"POST\",\n      headers: headers,\n      body: body,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/teachers/subjects/remove\", requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async getAdminTeacherSubjectsAndClassrooms(id, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    var requestOptions = {\n      method: \"GET\",\n      headers: headers,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/teachers/data/\" + id, requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async changeAdminStudentClassroom(data, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    const body = JSON.stringify(data);\n    var requestOptions = {\n      method: \"POST\",\n      headers: headers,\n      body: body,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/student/classrooms/change\", requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async getAdminStudents(token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    var requestOptions = {\n      method: \"GET\",\n      headers: headers,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/students\", requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async getAdminTeachers(token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    var requestOptions = {\n      method: \"GET\",\n      headers: headers,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/teachers\", requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async getAdminClassrooms(token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    var requestOptions = {\n      method: \"GET\",\n      headers: headers,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/classrooms\", requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async getAdminSubjects(token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    var requestOptions = {\n      method: \"GET\",\n      headers: headers,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/subjects\", requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async createUser(data, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    const body = JSON.stringify(data);\n    var requestOptions = {\n      method: \"POST\",\n      headers: headers,\n      body: body,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/users\", requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async createClassroom(data, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    const body = JSON.stringify(data);\n    var requestOptions = {\n      method: \"POST\",\n      headers: headers,\n      body: body,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/classrooms\", requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async createSubject(data, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    const body = JSON.stringify(data);\n    var requestOptions = {\n      method: \"POST\",\n      headers: headers,\n      body: body,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/subjects\", requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  } ////////////\n\n\n  static async getUsers(token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    var requestOptions = {\n      method: \"GET\",\n      headers: headers,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/users\", requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async editUser(id, data, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    const body = JSON.stringify(data);\n    var requestOptions = {\n      method: \"POST\",\n      headers: headers,\n      body: body,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/users/\" + id, requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async getAdminClassroom(id, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    var requestOptions = {\n      method: \"GET\",\n      headers: headers,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/classrooms/\" + id, requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async getAdminSubjectsByUser(id, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    var requestOptions = {\n      method: \"GET\",\n      headers: headers,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/subjects/\" + id, requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async getAdminTeacherSubjects(id, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    var requestOptions = {\n      method: \"GET\",\n      headers: headers,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/teachers/subjects/\" + id, requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async getTeacherClassrooms(token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    var requestOptions = {\n      method: \"GET\",\n      headers: headers,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/classrooms\", requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async updateStudentSubjects(data, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    const body = JSON.stringify(data);\n    var requestOptions = {\n      method: \"POST\",\n      headers: headers,\n      body: body,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/admin/students/subjects\", requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  static async getGrades(subjectId, token) {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"auth-token\", token);\n    var requestOptions = {\n      method: \"GET\",\n      headers: headers,\n      redirect: \"follow\"\n    };\n    return fetch(API_URL + \"/api/grades/\" + subjectId, requestOptions).then(response => response.json()).then(result => {\n      return result;\n    }).catch(error => {\n      return error;\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/tomasboda/Documents/Workspace/React/edulabs/src/app/config/Api.js"],"names":["React","API_URL","Api","Component","constructor","login","data","headers","Headers","append","raw","JSON","stringify","email","password","requestOptions","method","body","redirect","fetch","then","response","json","result","catch","error","getUser","token","getUserSubjects","getSubject","id","getClassroom","getTeacherClassroomsBySubject","subjectId","getTeacherClassroomStudents","classroomId","getAdminUser","getAdminClassroomStudents","getAdminUserSubjects","getAdminUserClassrooms","addAdminStudentSubject","removeAdminStudentSubject","addAdminTeacherSubject","removeAdminTeacherSubject","getAdminTeacherSubjectsAndClassrooms","changeAdminStudentClassroom","getAdminStudents","getAdminTeachers","getAdminClassrooms","getAdminSubjects","createUser","createClassroom","createSubject","getUsers","editUser","getAdminClassroom","getAdminSubjectsByUser","getAdminTeacherSubjects","getTeacherClassrooms","updateStudentSubjects","getGrades"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { API_URL } from \"./Config\";\n\nexport default class Api extends React.Component {\n\n    constructor() {\n        super();\n    }\n\n    // AUTHENTIFICATION API CALLS\n\n    static async login(data) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n\n        var raw = JSON.stringify({\n            email : data.email,\n            password : data.password\n        })\n            \n        var requestOptions = {\n            method: \"POST\",\n            headers: headers,\n            body: raw,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/auth/login\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async getUser(token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n            \n        var requestOptions = {\n            method: \"GET\",\n            headers: headers,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/auth/user\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    // PERSONAL API CALLS\n\n    static async getUserSubjects(token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n            \n        var requestOptions = {\n            method: \"GET\",\n            headers: headers,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/subjects\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async getSubject(id, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n            \n        var requestOptions = {\n            method: \"GET\",\n            headers: headers,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/subjects/\" + id, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async getClassroom(id, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n            \n        var requestOptions = {\n            method: \"GET\",\n            headers: headers,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/classrooms/\" + id, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async getTeacherClassroomsBySubject(subjectId, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n            \n        var requestOptions = {\n            method: \"GET\",\n            headers: headers,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/subjects/classrooms/\" + subjectId, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async getTeacherClassroomStudents(classroomId, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n            \n        var requestOptions = {\n            method: \"GET\",\n            headers: headers,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/students/\" + classroomId, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    // ADMIN API CALLS\n\n    static async getAdminUser(id, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n            \n        var requestOptions = {\n            method: \"GET\",\n            headers: headers,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/users/\" + id, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async getAdminClassroomStudents(id, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n            \n        var requestOptions = {\n            method: \"GET\",\n            headers: headers,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/students/\" + id, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async getAdminUserSubjects(id, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n            \n        var requestOptions = {\n            method: \"GET\",\n            headers: headers,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/subjects/\" + id, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async getAdminUserClassrooms(id, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n            \n        var requestOptions = {\n            method: \"GET\",\n            headers: headers,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/classrooms/\" + id, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async addAdminStudentSubject(data, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n\n        const body = JSON.stringify(data);\n            \n        var requestOptions = {\n            method: \"POST\",\n            headers: headers,\n            body: body,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/students/subjects/add\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async removeAdminStudentSubject(data, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n\n        const body = JSON.stringify(data);\n            \n        var requestOptions = {\n            method: \"POST\",\n            headers: headers,\n            body: body,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/students/subjects/remove\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async addAdminTeacherSubject(data, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n\n        const body = JSON.stringify(data);\n            \n        var requestOptions = {\n            method: \"POST\",\n            headers: headers,\n            body: body,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/teachers/subjects/add\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async removeAdminTeacherSubject(data, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n\n        const body = JSON.stringify(data);\n            \n        var requestOptions = {\n            method: \"POST\",\n            headers: headers,\n            body: body,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/teachers/subjects/remove\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async getAdminTeacherSubjectsAndClassrooms(id, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n            \n        var requestOptions = {\n            method: \"GET\",\n            headers: headers,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/teachers/data/\" + id, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async changeAdminStudentClassroom(data, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n\n        const body = JSON.stringify(data);\n            \n        var requestOptions = {\n            method: \"POST\",\n            headers: headers,\n            body: body,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/student/classrooms/change\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async getAdminStudents(token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n            \n        var requestOptions = {\n            method: \"GET\",\n            headers: headers,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/students\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async getAdminTeachers(token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n            \n        var requestOptions = {\n            method: \"GET\",\n            headers: headers,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/teachers\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async getAdminClassrooms(token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n            \n        var requestOptions = {\n            method: \"GET\",\n            headers: headers,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/classrooms\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async getAdminSubjects(token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n            \n        var requestOptions = {\n            method: \"GET\",\n            headers: headers,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/subjects\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async createUser(data, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n\n        const body = JSON.stringify(data);\n            \n        var requestOptions = {\n            method: \"POST\",\n            headers: headers,\n            body: body,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/users\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async createClassroom(data, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n\n        const body = JSON.stringify(data);\n            \n        var requestOptions = {\n            method: \"POST\",\n            headers: headers,\n            body: body,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/classrooms\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async createSubject(data, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n\n        const body = JSON.stringify(data);\n            \n        var requestOptions = {\n            method: \"POST\",\n            headers: headers,\n            body: body,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/subjects\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    ////////////\n\n    static async getUsers(token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n            \n        var requestOptions = {\n            method: \"GET\",\n            headers: headers,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/users\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async editUser(id, data, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n\n        const body = JSON.stringify(data);\n            \n        var requestOptions = {\n            method: \"POST\",\n            headers: headers,\n            body: body,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/users/\" + id, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async getAdminClassroom(id, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n            \n        var requestOptions = {\n            method: \"GET\",\n            headers: headers,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/classrooms/\" + id, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async getAdminSubjectsByUser(id, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n            \n        var requestOptions = {\n            method: \"GET\",\n            headers: headers,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/subjects/\" + id, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async getAdminTeacherSubjects(id, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n            \n        var requestOptions = {\n            method: \"GET\",\n            headers: headers,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/teachers/subjects/\" + id, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async getTeacherClassrooms(token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n            \n        var requestOptions = {\n            method: \"GET\",\n            headers: headers,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/classrooms\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async updateStudentSubjects(data, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n\n        const body = JSON.stringify(data);\n            \n        var requestOptions = {\n            method: \"POST\",\n            headers: headers,\n            body: body,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/admin/students/subjects\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n\n    static async getGrades(subjectId, token) {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        headers.append(\"auth-token\", token);\n            \n        var requestOptions = {\n            method: \"GET\",\n            headers: headers,\n            redirect: \"follow\"\n        };\n        \n        return fetch(API_URL + \"/api/grades/\" + subjectId, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                return result\n            })\n            .catch(error => {\n                return error\n            });\n    }\n}"]},"metadata":{},"sourceType":"module"}